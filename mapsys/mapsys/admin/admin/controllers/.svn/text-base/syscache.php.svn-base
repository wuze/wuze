<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');


/**
 * 系统缓存生成
 * @author jagy
 * @version 1.0
 * @last 2011-11-15 17:25
 */

/**
 * 控制器描述数组
 DESCARRAY
 $simple['desc'] = '系统缓存管理';
 $simple['actions']  = array(
 'index'=>array('name'=>'系统缓存列表', 'writelog' => 'file'),
 'coursecache'=>array('name'=>'科目分类缓存'),
 'newscache'=>array('name'=>'新闻分类缓存'),
 'categorycache' => array('name' => '年级分类缓存'),
 'allcache' => array('name' => '更新所有缓存'),

 );
 DESCARRAY
 */

class Syscache extends MY_Controller {

	var $cache_path; //缓存路径


	function __construct(){
		parent::__construct();

		$this->cache_path = $this->config->item('cache_data');
	}

	/**
	 * 系统缓存列表
	 * @author jagy
	 */
	public function index(){

		$this->load->view('default/syscache_index');
	}

	/**
	 * 科目分类缓存
	 * @author jagy
	 */
	public function coursecache(){
		$query = $this->db->get('course');
		$filename = $this->cache_path . "coursecategory.php";
		foreach ($query->result_array() as $row){
			$list[$row[courseid]] = $row;
		}


		$writeString = var_export($list,true);
		$writeString = "<?php
/**
 * 科目分类数组
 *
 */
 
\$category = {$writeString};
return \$category;
?>
";
		$this->_mkdirs($this->cache_path);
		$this->cache_write($filename, $writeString);
	}

	/**
	 * 新闻分类缓存
	 * @author jagy
	 */
	public function newscache(){
		$filename = $this->cache_path . "newscategory.php";
		$query = $this->db->get('newscategory');
		foreach ($query->result_array() as $row){
			$list[$row[newscatid]] = $row;
		}

		

		$writeString = var_export($list,true);
		$writeString = "<?php
/**
 * 新闻分类数组
 *
 */
 
\$category = {$writeString};
return \$category;
?>
";
		$this->_mkdirs($this->cache_path);
		$this->cache_write($filename, $writeString);
	}

	/**
	 * 年级分类缓存
	 * @author jagy
	 */
	public function categorycache(){

		$filename = $this->cache_path . "classcategory.php";
		$query = $this->db->get('categorys');
		foreach ($query->result_array() as $row){
			$list[$row[catid]] = $row;
		}


		$writeString = var_export($list,true);
		$writeString = "<?php
/**
 * 年级分类数组
 *
 */
 
\$category = {$writeString};
return \$category;
?>
";
		$this->_mkdirs($this->cache_path);
		$this->cache_write($filename, $writeString);

	}
	
	/**
	 * 更新所有缓存
	 * @author jagy
	 */
	public function allcache(){

		$data = $this->input->post('data');

		$this->coursecache();
		$this->newscache();
		$this->categorycache();

		showmessage('生成缓存成功', '', site_url(array('c' => 'syscache', 'm' => 'index')));
	}



	/**
	 * 写数组到文件，如果文件有改动则先备份
	 *
	 * @param string $right_file 文件名
	 * @param string $content 文件内容
	 *
	 * @return null
	 *
	 */
	protected function cache_write($right_file, $content)
	{
		$tmp_access = '';
		if($file_is_exists = file_exists($right_file))
		{
			$tmp_access = @include $right_file;
		}
		if($content != $tmp_access){

			//如果原先权限文件已经存在，则拷贝，不存在跳过。
			if(!empty($file_is_exists))
			@copy($right_file, $right_file.'_'.date('YmdHis').'_'.rand(0,60).'.bak');

			$fp = @fopen($right_file,"w+");
			if (@flock($fp, LOCK_EX)) { // 进行排它型锁定
				@fwrite($fp, $content);
				@flock($fp, LOCK_UN);   // 释放锁定
			}
			fclose($fp);
		}
	}

	/**
	 * 建立多级目录
	 *
	 * @param string $dir 目录路径
	 * @param string $mode 目录权限
	 *
	 * @return null
	 *
	 */
	protected function _mkdirs($dir,$mode = '0777'){
		if(!is_dir($dir)){
			$this->_mkdirs(dirname($dir), $mode);
			mkdir($dir,$mode);
		}
		return ;
	}
}